name: Windows Compile

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-2022
    strategy:
      matrix:
        config: [Release, Debug]
        toolchain: [v143, clangcl]
        generate: [Visual Studio 17 2022, Ninja]
    steps:
      - uses: actions/checkout@v4
      - name: Build Visual Studio
        if: ${{ matrix.generate == 'Visual Studio 17 2022' }}
        run: |
          cmake -S . -B "build/x64" -G "${{ matrix.generate }}" -T ${{ matrix.toolchain }} -A x64 -DCMAKE_BUILD_TYPE:STRING=${{ matrix.config }}
          cmake --build ./build/x64
      - name: Setup Ninja
        if: ${{ matrix.generate == 'Ninja' }}
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
          # only use default toolchain for Ninja
      - name: Build Ninja msvc
        if: ${{ matrix.generate == 'Ninja' && matrix.toolchain == 'v143' }}
        run: |
          cmake -S . -B "build/x64" -G "${{ matrix.generate }}" -DCMAKE_BUILD_TYPE:STRING=${{ matrix.config }}
          cmake --build ./build/x64 --config ${{ matrix.config }} --parallel 10
      - name: Build Ninja clang-cl
        if: ${{ matrix.generate == 'Ninja' && matrix.toolchain == 'clangcl' }}
        run: |
          cmake -S . -B "build/x64" -G "${{ matrix.generate }}" -T ${{ matrix.toolchain }} -A x64 -DCMAKE_BUILD_TYPE:STRING=${{ matrix.config }} -DCMAKE_CXX_COMPILER=clang-cl.exe -DCMAKE_C_COMPILER=clang-cl.exe
          cmake --build ./build/x64 --config ${{ matrix.config }} --parallel 10
      - name: Publish packaged artifacts
        if: ${{ matrix.config == 'Release' }}
        uses: actions/upload-artifact@v4
        with:
          name: torch-windows-x64-${{ matrix.toolchain }}
          path: build/x64/Release/torch.exe